#
  #  Copyright (c) 2025 Cofinity-X
  #
  #  See the NOTICE file(s) distributed with this work for additional
  #  information regarding copyright ownership.
  #
  #  This program and the accompanying materials are made available under the
  #  terms of the Apache License, Version 2.0 which is available at
  #  https://www.apache.org/licenses/LICENSE-2.0
  #
  #  Unless required by applicable law or agreed to in writing, software
  #  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  #  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  #  License for the specific language governing permissions and limitations
  #  under the License.
  #
  #  SPDX-License-Identifier: Apache-2.0
  #

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "identityhub.fullname" . }}
  labels:
    {{- include "identityhub.server.labels" . | nindent 4 }}
spec:
  {{- if not .Values.identityhub.autoscaling.enabled }}
  replicas: {{ .Values.identityhub.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "identityhub.server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.identityhub.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "identityhub.server.selectorLabels" . | nindent 8 }}
        {{- with .Values.identityhub.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "identityhub.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.identityhub.podSecurityContext | nindent 8 }}
      {{- if or .Values.identityhub.initContainers .Values.customCaCerts }}
      initContainers:
        {{- if .Values.identityhub.initContainers }}
        {{- toYaml .Values.identityhub.initContainers | nindent 8 }}
        {{- end }}
        {{- if .Values.customCaCerts }}
        - name: custom-cacerts
          # either use the specified image, or use the default one
          {{- if .Values.identityhub.image.repository }}
          image: "{{ .Values.identityhub.image.repository }}:{{ .Values.identityhub.image.tag | default .Chart.AppVersion }}"
          {{- else }}
          image: "identityhub:{{ .Values.identityhub.image.tag | default .Chart.AppVersion }}"
          {{- end }}
          imagePullPolicy: {{ .Values.identityhub.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              cp /opt/java/openjdk/lib/security/cacerts /workdir/
              find /cacerts -type f \( -iname \*.crt -o -iname \*.pem \) -exec echo "{}" \; | while read PEM_FILE_PATH; do
                PEM_FILE=${PEM_FILE_PATH##*/}
                ALIAS=${PEM_FILE%.*}
                echo "adding ${PEM_FILE} with alias ${ALIAS} to cacerts ..."
                keytool -import -noprompt -trustcacerts -alias ${ALIAS} -file ${PEM_FILE_PATH} -keystore /workdir/cacerts -storepass changeit
              done
          securityContext:
            {{- toYaml .Values.identityhub.securityContext | nindent 12 }}
          volumeMounts:
            - name: custom-cacertificates
              mountPath: /cacerts
            - name: custom-cacerts
              mountPath: /workdir
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.identityhub.securityContext | nindent 12 }}
          # either use the specified image, or use the default one
          {{- if .Values.identityhub.image.repository }}
          image: "{{ .Values.identityhub.image.repository }}:{{ .Values.identityhub.image.tag | default .Chart.AppVersion }}"
          {{- else }}
          image: "tractusx/identityhub:{{ .Values.identityhub.image.tag | default .Chart.AppVersion }}"
          {{- end }}

          imagePullPolicy: {{ .Values.identityhub.image.pullPolicy }}
          ports:
          {{- range $key,$value := .Values.identityhub.endpoints }}
            - name: {{ $key }}
              containerPort: {{ $value.port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.identityhub.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.identityhub.endpoints.default.path }}/check/liveness
              port: {{ .Values.identityhub.endpoints.default.port }}
            initialDelaySeconds: {{ .Values.identityhub.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.identityhub.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.identityhub.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.identityhub.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.identityhub.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.identityhub.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.identityhub.endpoints.default.path }}/check/readiness
              port: {{ .Values.identityhub.endpoints.default.port }}
            initialDelaySeconds: {{ .Values.identityhub.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.identityhub.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.identityhub.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.identityhub.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.identityhub.readinessProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.identityhub.resources | nindent 12 }}
          env:
          {{- if .Values.identityhub.debug.enabled }}
            - name: "JAVA_TOOL_OPTIONS"
            {{- if .Values.identityhub.debug.suspendOnStart }}
              value: >-
                {{ printf "%s-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=%v"  (ternary "-XX:UseSVE=0 " "" .Values.identityhub.useSVE) .Values.identityhub.debug.port}}
            {{- else }}
              value: >-
                {{ printf "%s-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=%v"  (ternary "-XX:UseSVE=0 " "" .Values.identityhub.useSVE) .Values.identityhub.debug.port}}
            {{- end }}
          {{- end }}


            ######################################
            ## Additional environment variables ##
            ######################################
          {{- range $key, $value := .Values.identityhub.envValueFrom }}
            - name: {{ $key | quote }}
              valueFrom:
                {{- tpl (toYaml $value) $ | nindent 16 }}
          {{- end }}
          {{- range $key, $value := .Values.identityhub.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
          {{- end }}
          {{- if and (or .Values.identityhub.envSecretNames .Values.identityhub.envConfigMapNames) (or (gt (len .Values.identityhub.envSecretNames) 0) (gt (len .Values.identityhub.envConfigMapNames) 0)) }}
          envFrom:
          {{- range $value := .Values.identityhub.envSecretNames }}
            - secretRef:
                name: {{ $value | quote }}
          {{- end }}
          {{- range $value := .Values.identityhub.envConfigMapNames }}
            - configMapRef:
                name: {{ $value | quote }}
          {{- end }}
          {{- end }}
          volumeMounts:
            {{- if .Values.customCaCerts }}
            - name: custom-cacerts
              mountPath: /opt/java/openjdk/lib/security/cacerts
              subPath: cacerts
            {{- end }}
            - name: "tmp"
              mountPath: "/tmp"
      volumes:
        - name: "configuration"
          configMap:
            name: {{ include "identityhub.fullname" . }}
            items:
              - key: "logging.properties"
                path: "logging.properties"
        {{- if .Values.customCaCerts }}
        - name: custom-cacertificates
          configMap:
            name: {{ include "identityhub.fullname" . }}-custom-cacerts
            defaultMode: 0400
        - name: custom-cacerts
          emptyDir:
            sizeLimit: 1Mi
        {{- end }}
        - name: "tmp"
          emptyDir: { }
      {{- with .Values.identityhub.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.identityhub.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.identityhub.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
